{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Listado de categorias en componente\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"row mt-3\"\n};\nconst _hoisted_3 = {\n  class: \"card mb-3\"\n};\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"card-title mb-3\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Nombre:\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"card-text\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Descripcion:\", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  \"k:ey\": \"c.id\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = {\n  class: \"col\"\n};\nconst _hoisted_14 = {\n  class: \"card\",\n  style: {\n    \"width\": \"18rem\"\n  }\n};\nconst _hoisted_15 = {\n  class: \"card-body\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"ACTUALIZAR CATEGORIA\", -1 /* HOISTED */);\nconst _hoisted_17 = {\n  key: 1\n};\nconst _hoisted_18 = {\n  class: \"col\"\n};\nconst _hoisted_19 = {\n  class: \"card\",\n  style: {\n    \"width\": \"18rem\"\n  }\n};\nconst _hoisted_20 = {\n  class: \"card-body\"\n};\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"REGISTRAR CATEGORIA\", -1 /* HOISTED */);\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Nombre:\", -1 /* HOISTED */);\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Descripcion:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  const _component_update = _resolveComponent(\"update\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_update, {\n    update: false,\n    \"form-title\": \"Registrar\"\n  }), _hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.buscar = $event),\n    class: \"form-control\",\n    placeholder: \"Ejemplo: terror\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.buscar]]), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.categorias, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col-md-4\",\n      key: item.id\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\"<img class=\\\"card-img-top\\\" v-bind:src=\\\"'img/' + item.img\\\" v-bind:alt=\\\"item.nombre\\\">\"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h3\", _hoisted_5, [_hoisted_6, _createTextVNode(_toDisplayString(item.nombre), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_7, [_hoisted_8, _createTextVNode(\" \" + _toDisplayString(item.descripcion), 1 /* TEXT */)])])])]);\n  }), 128 /* KEYED_FRAGMENT */))]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.categorias, c => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"div\", null, \"Nombre: \" + _toDisplayString(c.nombre), 1 /* TEXT */), _createElementVNode(\"div\", null, \"Descripcion: \" + _toDisplayString(c.descripcion), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $event => _ctx.removeCategoria(c.id)\n    }, \"eliminar \" + _toDisplayString(c.id), 9 /* TEXT, PROPS */, _hoisted_10)]), _createElementVNode(\"button\", {\n      onClick: [_cache[1] || (_cache[1] = $event => _ctx.update = true), $event => _ctx.cargarCategoria(c.id)]\n    }, \"Actualizar Categoria\", 8 /* PROPS */, _hoisted_11)]);\n  }), 256 /* UNKEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.update = false)\n  }, \"Crear Categoria\"), _ctx.update == true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_hoisted_16, _createElementVNode(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = (...args) => _ctx.sendForm2 && _ctx.sendForm2(...args))\n  }, [_createElementVNode(\"label\", null, \"Nombre: \" + _toDisplayString(_ctx.categoria.nombre), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.categoria.nombre = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.categoria.nombre]]), _createElementVNode(\"label\", null, \"Descripcion: \" + _toDisplayString(_ctx.categoria.descripcion), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.categoria.descripcion = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.categoria.descripcion]]), _createCommentVNode(\"<select  v-model=\\\"id\\\">\\r\\n                                <option v-for=\\\"c  in categorias\\\" ::key=\\\"c.id\\\" :value=\\\"c.id\\\">\\r\\n                                    {{c.nombre}}\\r\\n                                </option>\\r\\n                            </select>\"), _createElementVNode(\"input\", {\n    type: \"submit\",\n    value: \"Enviar\",\n    onClick: _cache[5] || (_cache[5] = () => {})\n  }), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => _ctx.update = null)\n  }, \"cancelar\")], 32 /* HYDRATE_EVENTS */)])])])])) : _createCommentVNode(\"v-if\", true), _ctx.update == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_hoisted_21, _createElementVNode(\"form\", {\n    onSubmit: _cache[12] || (_cache[12] = (...args) => _ctx.sendForm && _ctx.sendForm(...args))\n  }, [_hoisted_22, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.categoria.nombre = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.categoria.nombre]]), _hoisted_23, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.categoria.descripcion = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.categoria.descripcion]]), _createCommentVNode(\"<select  v-model=\\\"id\\\">\\r\\n                                <option v-for=\\\"c  in categorias\\\" ::key=\\\"c.id\\\" :value=\\\"c.id\\\">\\r\\n                                    {{c.nombre}}\\r\\n                                </option>\\r\\n                            </select>\"), _createElementVNode(\"input\", {\n    type: \"submit\",\n    value: \"Enviar\",\n    onClick: _cache[10] || (_cache[10] = () => {})\n  }), _createElementVNode(\"button\", {\n    onClick: _cache[11] || (_cache[11] = $event => _ctx.update = null)\n  }, \"cancelar\")], 32 /* HYDRATE_EVENTS */)])])])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","style","_createVNode","_component_update","update","_hoisted_1","type","_ctx","placeholder","_hoisted_2","_createElementBlock","_Fragment","item","key","id","_hoisted_3","_createCommentVNode","_hoisted_4","_hoisted_5","_hoisted_6","nombre","_hoisted_7","_hoisted_8","descripcion","c","_hoisted_9","onClick","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","onSubmit","value","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23"],"sourceRoot":"","sources":["C:\\Users\\root\\Desktop\\Diplomado Fullstak\\Modulo6\\peliculasvue\\src\\components\\categoria\\SaveCategoriaComponent.vue"],"sourcesContent":["<template>\r\n    <update v-bind:update=\"false\" form-title=\"Registrar\"></update>\r\n\r\n\r\n    <h1>Listado de categorias en componente</h1>\r\n\r\n    <input type=\"text\" v-model=\"buscar\" class=\"form-control\" placeholder=\"Ejemplo: terror\"/>\r\n\r\n    <div class=\"row mt-3\">\r\n    \r\n    <div class=\"col-md-4\" v-for=\"item in categorias\" v-bind:key=\"item.id\"> \r\n\r\n        <div class=\"card mb-3\">\r\n            <!--<img class=\"card-img-top\" v-bind:src=\"'img/' + item.img\" v-bind:alt=\"item.nombre\">-->\r\n            <div class=\"card-body\">\r\n            <h3 class=\"card-title mb-3\"><strong>Nombre:</strong>{{ item.nombre }}</h3>\r\n            <p class=\"card-text\"><strong>Descripcion:</strong> {{ item.descripcion }}</p>\r\n   \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n        <div v-for=\"c in categorias\" k:ey=\"c.id\">\r\n            <div >Nombre: {{c.nombre}} </div>\r\n            <div >Descripcion: {{c.descripcion}} </div>\r\n            <div><button @click=\"removeCategoria(c.id)\">eliminar {{c.id}}</button></div>\r\n            \r\n            <button v-on:click=\"update =true\" @click=\"cargarCategoria(c.id)\">Actualizar Categoria</button>\r\n             \r\n        </div>\r\n        <button v-on:click=\"update =false\">Crear Categoria</button>\r\n        <div v-if=\"update==true\">\r\n            <div class=\"col\">\r\n                <div class=\"card\" style=\"width: 18rem;\">\r\n                    <div class=\"card-body\">\r\n                        <h1>ACTUALIZAR CATEGORIA</h1>\r\n                        <form @submit=\"sendForm2\">\r\n                            <label>Nombre: {{categoria.nombre}}</label>\r\n                            <input v-model=\"categoria.nombre\" type=\"text\" >\r\n                            <label>Descripcion: {{categoria.descripcion}}</label>\r\n                            <input v-model=\"categoria.descripcion\" type=\"text\" />\r\n                            <!--<select  v-model=\"id\">\r\n                                <option v-for=\"c  in categorias\" ::key=\"c.id\" :value=\"c.id\">\r\n                                    {{c.nombre}}\r\n                                </option>\r\n                            </select>-->\r\n                            <input type=\"submit\" value=\"Enviar\" @click=\"\">\r\n                            <button v-on:click=\"update =null\">cancelar</button>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n \r\n        <div v-if=\"update==false\">\r\n            <div class=\"col\">\r\n                <div class=\"card\" style=\"width: 18rem;\">\r\n                    <div class=\"card-body\">\r\n                        <h1>REGISTRAR CATEGORIA</h1>\r\n                        <form @submit=\"sendForm\">\r\n                            <label>Nombre:</label>\r\n                            <input v-model=\"categoria.nombre\" type=\"text\" />\r\n                            <label>Descripcion:</label>\r\n                            <input v-model=\"categoria.descripcion\" type=\"text\" />\r\n                            <!--<select  v-model=\"id\">\r\n                                <option v-for=\"c  in categorias\" ::key=\"c.id\" :value=\"c.id\">\r\n                                    {{c.nombre}}\r\n                                </option>\r\n                            </select>-->\r\n                            <input type=\"submit\" value=\"Enviar\" @click=\"\">\r\n                            <button v-on:click=\"update =null\">cancelar</button> \r\n                        </form>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n \r\n <script>\r\n import axios from \"axios\";\r\n export default {\r\n    props: {\r\n        update: Boolean,\r\n        formTitle: String,\r\n        categoriaActualizar: []\r\n    },\r\n     data(){\r\n         return {\r\n            update: Boolean,\r\n            categorias: [],\r\n            categoria: {\r\n                nombre:\"\",\r\n                descripcion:\"\",\r\n            }, \r\n            categoriaActualizar: [],    \r\n            buscar: '',       \r\n         };\r\n     },\r\n     methods: {\r\n        sendForm(e){\r\n            e.preventDefault();\r\n            \r\n            console.log(this.categoria);\r\n            const formData = new FormData();\r\n            \r\n            formData.append(\"nombre\", this.categoria.nombre);\r\n            formData.append(\"descripcion\", this.categoria.descripcion);\r\n\r\n            //this.insert(formData);\r\n            this.addCategoria();\r\n        },\r\n        insert(formData)\r\n        {\r\n            fetch(\"http://localhost:3000/categoria/\",{\r\n                method: \"POST\",\r\n                body: formData,\r\n            })\r\n                .then((res) =>res.json())\r\n                .then((res)=>console.log(res));\r\n        },\r\n        async addCategoria() {\r\n            const res = await axios.post(`http://localhost:3000/categoria`, {\r\n                nombre: this.categoria.nombre,\r\n                descripcion: this.categoria.descripcion,\r\n            });\r\n            this.categorias = [...this.categorias, res.data];\r\n            this.nombre = \"\";\r\n            this.descripcion = \"\";\r\n        },\r\n        async updateCategoria(id) {\r\n            try {\r\n                await axios.patch(`${`http://localhost:3000/categoria`}/${id}`, {\r\n                    updateCategoria: true\r\n                });\r\n                this.categorias = this.categorias.map(categoria => {\r\n                    if (categoria.id === id) {\r\n                        categoria.updateCategoria = true;\r\n                    }\r\n                    return categoria;\r\n                });\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        },\r\n        removeCategoria(id) {\r\n            axios.delete(`http://localhost:3000/categoria/${id}`)\r\n            this.categorias = this.categorias.filter(categoria => categoria.id !== id)\r\n        },\r\n        async cargarCategoria(id){\r\n            try {\r\n                await axios.get(`${`http://localhost:3000/categoria`}/${id}`, {\r\n                    updateCategoria: true\r\n                });\r\n                this.categorias = this.categorias.map(categoria => {\r\n                    if (categoria.id === id) {\r\n                        categoria.updateCategoria = true;\r\n                        //console.log(categoria);\r\n                        categoriaActualizar=categoria\r\n                    }\r\n                    console.log(categoriaActualizar);\r\n                    return categoriaActualizar;\r\n                });\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n            \r\n        }\r\n     },\r\n     computed: {\r\n\r\n        items() {\r\n      return categorias.filter(categorias => {\r\n        return categoria.nombre.toLowerCase().includes(this.buscar.toLowerCase());\r\n        console.log*\r\n      });\r\n    },\r\n     },\r\n     mounted() {\r\n        fetch(\"http://localhost:3000/categoria\")\r\n        .then((res) =>res.json())\r\n        .then((res)=>this.categorias=res);\r\n    },\r\n     components: {\r\n     }\r\n }\r\n </script>\r\n <style >\r\n  .producto-relacionado-precio{\r\n        background: orangered;\r\n        color: white;\r\n        text-align: center;\r\n        padding: 10px; \r\n    }\r\n </style>"]},"metadata":{},"sourceType":"module"}