{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  props: {\n    update: Boolean,\n    formTitle: String,\n    categoriaActualizar: []\n  },\n  data() {\n    return {\n      update: Boolean,\n      categorias: [],\n      categoria: {\n        nombre: \"\",\n        descripcion: \"\",\n        textoABuscar: ''\n      },\n      categoriaActualizar: [],\n      buscar: ''\n    };\n  },\n  methods: {\n    sendForm(e) {\n      e.preventDefault();\n      console.log(this.categoria);\n      const formData = new FormData();\n      formData.append(\"nombre\", this.categoria.nombre);\n      formData.append(\"descripcion\", this.categoria.descripcion);\n\n      //this.insert(formData);\n      this.addCategoria();\n    },\n    insert(formData) {\n      fetch(\"http://localhost:3000/categoria/\", {\n        method: \"POST\",\n        body: formData\n      }).then(res => res.json()).then(res => console.log(res));\n    },\n    async addCategoria() {\n      const res = await axios.post(`http://localhost:3000/categoria`, {\n        nombre: this.categoria.nombre,\n        descripcion: this.categoria.descripcion\n      });\n      this.categorias = [...this.categorias, res.data];\n      this.nombre = \"\";\n      this.descripcion = \"\";\n    },\n    async updateCategoria(id) {\n      try {\n        await axios.patch(`${`http://localhost:3000/categoria`}/${id}`, {\n          updateCategoria: true\n        });\n        this.categorias = this.categorias.map(categoria => {\n          if (categoria.id === id) {\n            categoria.updateCategoria = true;\n          }\n          return categoria;\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    removeCategoria(id) {\n      axios.delete(`http://localhost:3000/categoria/${id}`);\n      this.categorias = this.categorias.filter(categoria => categoria.id !== id);\n    },\n    async cargarCategoria(id) {\n      axios.get(`http://localhost:3000/categoria/${id}`);\n      this.categorias = this.categorias.filter(categoria => categoria.id !== id);\n      return categoria;\n      console.log(categoria.nombre + categoria.descripcion);\n    },\n    getTareas() {\n      axios({\n        method: \"get\",\n        url: process.env.VUE_APP_RUTA_API + \"/tareas/?q=\" + this.textoABuscar\n      }).then(response => {\n        this.tareas = response.data;\n        console.log(response);\n      }).catch(e => console.log(e));\n    }\n  },\n  computed: {\n    items() {\n      return this.categorias.filter(item => {\n        return item.nombre.toLowerCase().includes(this.buscar.toLowerCase());\n      });\n    }\n  },\n  mounted() {\n    fetch(\"http://localhost:3000/categoria\").then(res => res.json()).then(res => this.categorias = res);\n  },\n  components: {}\n};","map":{"version":3,"mappings":"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","names":["axios","props","update","Boolean","formTitle","String","categoriaActualizar","data","categorias","categoria","nombre","descripcion","textoABuscar","buscar","methods","sendForm","e","preventDefault","console","log","formData","FormData","append","addCategoria","insert","fetch","method","body","then","res","json","post","updateCategoria","id","patch","map","error","removeCategoria","delete","filter","cargarCategoria","get","getTareas","url","process","env","VUE_APP_RUTA_API","response","tareas","catch","computed","items","item","toLowerCase","includes","mounted","components"],"sourceRoot":"","sources":["C:\\Users\\root\\Desktop\\Diplomado Fullstak\\Modulo6\\peliculasvue\\src\\components\\categoria\\SaveCategoriaComponent.vue"],"sourcesContent":["<template>\r\n    <update v-bind:update=\"false\" form-title=\"Registrar\"></update>\r\n\r\n    <h5>Buscador de tareas {{textoABuscar}}</h5>\r\n        <form action=\"\">\r\n        <div class=\"input-group mb-3\">\r\n            <input type=\"text\" v-model=\"textoABuscar\" class=\"form-control\" placeholder=\"Buscar tareas\" >\r\n            <button class=\"btn btn-outline-secondary\" @click.prevent=\"getTareas()\">Buscar</button>\r\n        </div>\r\n       </form> \r\n    <h1>Listado de categorias en componente</h1>\r\n\r\n    <input type=\"text\" v-model=\"buscar\" class=\"form-control\" placeholder=\"Ejemplo: terror\"/>\r\n    \r\n    <div class=\"row mt-3\">\r\n    \r\n        <div class=\"col-md-4\" v-for=\"item in items\" v-bind:key=\"item.id\"> \r\n\r\n            <div class=\"card mb-3\">\r\n                <!--<img class=\"card-img-top\" v-bind:src=\"'img/' + item.img\" v-bind:alt=\"item.nombre\">-->\r\n                <div class=\"card-body\">\r\n                <h3 class=\"card-title mb-3\"><strong>Nombre:</strong>{{ item.nombre }}</h3>\r\n                <p class=\"card-text\"><strong>Descripcion:</strong> {{ item.descripcion }}</p>\r\n                <div><button @click=\"removeCategoria(item.id)\">eliminar {{item.id}}</button></div>\r\n                <button v-on:click=\"update =true\" @click=\"cargarCategoria(item.id)\">Actualizar Categoria {{item.id}}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        <!--<div v-for=\"c in categorias\" k:ey=\"c.id\">\r\n            <div >Nombre: {{c.nombre}} </div>\r\n            <div >Descripcion: {{c.descripcion}} </div>\r\n            <div><button @click=\"removeCategoria(c.id)\">eliminar {{c.id}}</button></div>\r\n            \r\n            <button v-on:click=\"update =true\" @click=\"cargarCategoria(c.id)\">Actualizar Categoria</button>\r\n             \r\n        </div>-->\r\n        <button v-on:click=\"update =false\">Crear Categoria</button>\r\n        <div v-if=\"update==true\">\r\n            <div class=\"col\">\r\n                <div class=\"card\" style=\"width: 18rem;\">\r\n                    <div class=\"card-body\">\r\n                        <h1>ACTUALIZAR CATEGORIA</h1>\r\n                        <form @submit=\"sendForm\">\r\n                            <label>Nombre: {{categoria.nombre}}</label>\r\n                            <input v-model=\"categoria.nombre\" type=\"text\" >\r\n                            <label>Descripcion: {{categoria.descripcion}}</label>\r\n                            <input v-model=\"categoria.descripcion\" type=\"text\" />\r\n                            <!--<select  v-model=\"id\">\r\n                                <option v-for=\"c  in categorias\" ::key=\"c.id\" :value=\"c.id\">\r\n                                    {{c.nombre}}\r\n                                </option>\r\n                            </select>-->\r\n                            <input type=\"submit\" value=\"Enviar\" @click=\"\">\r\n                            <button v-on:click=\"update =null\">cancelar</button>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n \r\n        <div v-if=\"update==false\">\r\n            <div class=\"col\">\r\n                <div class=\"card\" style=\"width: 18rem;\">\r\n                    <div class=\"card-body\">\r\n                        <h1>REGISTRAR CATEGORIA</h1>\r\n                        <form @submit=\"sendForm\">\r\n                            <label>Nombre:</label>\r\n                            <input v-model=\"categoria.nombre\" type=\"text\" />\r\n                            <label>Descripcion:</label>\r\n                            <input v-model=\"categoria.descripcion\" type=\"text\" />\r\n                            <!--<select  v-model=\"id\">\r\n                                <option v-for=\"c  in categorias\" ::key=\"c.id\" :value=\"c.id\">\r\n                                    {{c.nombre}}\r\n                                </option>\r\n                            </select>-->\r\n                            <input type=\"submit\" value=\"Enviar\" @click=\"\">\r\n                            <button v-on:click=\"update =null\">cancelar</button> \r\n                        </form>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n \r\n <script>\r\n import axios from \"axios\";\r\n export default {\r\n    props: {\r\n        update: Boolean,\r\n        formTitle: String,\r\n        categoriaActualizar: [],\r\n        \r\n    },\r\n     data(){\r\n         return {\r\n            update: Boolean,\r\n            categorias: [],\r\n            categoria: {\r\n                nombre:\"\",\r\n                descripcion:\"\",\r\n                textoABuscar: '',\r\n            }, \r\n            categoriaActualizar: [],    \r\n            buscar: '',       \r\n         };\r\n     },\r\n     methods: {\r\n        sendForm(e){\r\n            e.preventDefault();\r\n            \r\n            console.log(this.categoria);\r\n            const formData = new FormData();\r\n            \r\n            formData.append(\"nombre\", this.categoria.nombre);\r\n            formData.append(\"descripcion\", this.categoria.descripcion);\r\n\r\n            //this.insert(formData);\r\n            this.addCategoria();\r\n        },\r\n        insert(formData)\r\n        {\r\n            fetch(\"http://localhost:3000/categoria/\",{\r\n                method: \"POST\",\r\n                body: formData,\r\n            })\r\n                .then((res) =>res.json())\r\n                .then((res)=>console.log(res));\r\n        },\r\n        async addCategoria() {\r\n            const res = await axios.post(`http://localhost:3000/categoria`, {\r\n                nombre: this.categoria.nombre,\r\n                descripcion: this.categoria.descripcion,\r\n            });\r\n            this.categorias = [...this.categorias, res.data];\r\n            this.nombre = \"\";\r\n            this.descripcion = \"\";\r\n        },\r\n        async updateCategoria(id) {\r\n            try {\r\n                await axios.patch(`${`http://localhost:3000/categoria`}/${id}`, {\r\n                    updateCategoria: true\r\n                });\r\n                this.categorias = this.categorias.map(categoria => {\r\n                    if (categoria.id === id) {\r\n                        categoria.updateCategoria = true;\r\n                    }\r\n                    return categoria;\r\n                });\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        },\r\n        removeCategoria(id) {\r\n            axios.delete(`http://localhost:3000/categoria/${id}`)\r\n            this.categorias = this.categorias.filter(categoria => categoria.id !== id)\r\n        },\r\n        async cargarCategoria(id){\r\n            axios.get(`http://localhost:3000/categoria/${id}`)\r\n            this.categorias = this.categorias.filter(categoria => categoria.id !== id)\r\n            return categoria;\r\n            console.log(categoria.nombre + categoria.descripcion);\r\n        },\r\n        getTareas() {\r\n            axios({\r\n                method: \"get\",\r\n                url: process.env.VUE_APP_RUTA_API+\"/tareas/?q=\"+this.textoABuscar\r\n            })\r\n                .then(response => {\r\n                    this.tareas = response.data;\r\n                    console.log(response);\r\n                })\r\n                .catch(e => console.log(e));\r\n        },\r\n     },\r\n     computed: {\r\n\r\n        items() {\r\n      return this.categorias.filter(item => {\r\n        return item.nombre.toLowerCase().includes(this.buscar.toLowerCase());\r\n      });\r\n    },\r\n     },\r\n     mounted() {\r\n        fetch(\"http://localhost:3000/categoria\")\r\n        .then((res) =>res.json())\r\n        .then((res)=>this.categorias=res);\r\n    },\r\n     components: {\r\n     }\r\n }\r\n </script>\r\n <style >\r\n  .producto-relacionado-precio{\r\n        background: orangered;\r\n        color: white;\r\n        text-align: center;\r\n        padding: 10px; \r\n    }\r\n </style>"]},"metadata":{},"sourceType":"module"}