{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Listado de categorias en componente\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  \"k:ey\": \"c.id\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  class: \"col\"\n};\nconst _hoisted_7 = {\n  class: \"card\",\n  style: {\n    \"width\": \"18rem\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"card-body\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"ACTUALIZAR CATEGORIA\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  key: 1\n};\nconst _hoisted_11 = {\n  class: \"col\"\n};\nconst _hoisted_12 = {\n  class: \"card\",\n  style: {\n    \"width\": \"18rem\"\n  }\n};\nconst _hoisted_13 = {\n  class: \"card-body\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"REGISTRAR CATEGORIA\", -1 /* HOISTED */);\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Nombre:\", -1 /* HOISTED */);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Descripcion:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  const _component_update = _resolveComponent(\"update\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_update, {\n    update: false,\n    \"form-title\": \"Registrar\"\n  }), _hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.categorias, c => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, \"Nombre: \" + _toDisplayString(c.nombre), 1 /* TEXT */), _createElementVNode(\"div\", null, \"Descripcion: \" + _toDisplayString(c.descripcion), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $event => _ctx.removeCategoria(c.id)\n    }, \"eliminar \" + _toDisplayString(c.id), 9 /* TEXT, PROPS */, _hoisted_3)]), _createElementVNode(\"button\", {\n      onClick: [_cache[0] || (_cache[0] = $event => _ctx.update = true), $event => _ctx.cargarCategoria(c.id)]\n    }, \"Actualizar Categoria\", 8 /* PROPS */, _hoisted_4)]);\n  }), 256 /* UNKEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.update = false)\n  }, \"Crear Categoria\"), _ctx.update == true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = (...args) => _ctx.sendForm2 && _ctx.sendForm2(...args))\n  }, [_createElementVNode(\"label\", null, \"Nombre: \" + _toDisplayString(_ctx.categoria.nombre), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.categoria.nombre = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.categoria.nombre]]), _createElementVNode(\"label\", null, \"Descripcion: \" + _toDisplayString(_ctx.categoria.descripcion), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.categoria.descripcion = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.categoria.descripcion]]), _createCommentVNode(\"<select  v-model=\\\"id\\\">\\r\\n                                <option v-for=\\\"c  in categorias\\\" ::key=\\\"c.id\\\" :value=\\\"c.id\\\">\\r\\n                                    {{c.nombre}}\\r\\n                                </option>\\r\\n                            </select>\"), _createElementVNode(\"input\", {\n    type: \"submit\",\n    value: \"Enviar\",\n    onClick: _cache[4] || (_cache[4] = () => {})\n  }), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => _ctx.update = null)\n  }, \"cancelar\")], 32 /* HYDRATE_EVENTS */)])])])])) : _createCommentVNode(\"v-if\", true), _ctx.update == false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createElementVNode(\"form\", {\n    onSubmit: _cache[11] || (_cache[11] = (...args) => _ctx.sendForm && _ctx.sendForm(...args))\n  }, [_hoisted_15, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.categoria.nombre = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.categoria.nombre]]), _hoisted_16, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.categoria.descripcion = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.categoria.descripcion]]), _createCommentVNode(\"<select  v-model=\\\"id\\\">\\r\\n                                <option v-for=\\\"c  in categorias\\\" ::key=\\\"c.id\\\" :value=\\\"c.id\\\">\\r\\n                                    {{c.nombre}}\\r\\n                                </option>\\r\\n                            </select>\"), _createElementVNode(\"input\", {\n    type: \"submit\",\n    value: \"Enviar\",\n    onClick: _cache[9] || (_cache[9] = () => {})\n  }), _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = $event => _ctx.update = null)\n  }, \"cancelar\")], 32 /* HYDRATE_EVENTS */)])])])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAEIA,oBAA4C,YAAxC,qCAAmC;;EACN,MAAI,EAAC;AAAM;;;;;;;EAU/BC,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC,MAAM;EAACC,KAAqB,EAArB;IAAA;EAAA;;;EACTD,KAAK,EAAC;AAAW;gCAClBD,oBAA6B,YAAzB,sBAAoB;;;;;EAqB/BC,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC,MAAM;EAACC,KAAqB,EAArB;IAAA;EAAA;;;EACTD,KAAK,EAAC;AAAW;iCAClBD,oBAA4B,YAAxB,qBAAmB;iCAEnBA,oBAAsB,eAAf,SAAO;iCAEdA,oBAA2B,eAApB,cAAY;;;;6DA3C3CG,aAA8DC;IAA/CC,MAAM,EAAE,KAAK;IAAE,YAAU,EAAC;MACzCC,UAA4C,qBACxCC,oBAOMC,6BAPWC,eAAU,EAAfC,CAAC;yBAAbH,oBAOM,OAPNI,UAOM,GANFX,oBAAiC,aAA3B,UAAQ,oBAAEU,CAAC,CAACE,MAAM,kBACxBZ,oBAA2C,aAArC,eAAa,oBAAEU,CAAC,CAACG,WAAW,kBAClCb,oBAA4E,cAAvEA,oBAAiE;MAAxDc,OAAK,YAAEL,oBAAe,CAACC,CAAC,CAACK,EAAE;OAAG,WAAS,oBAAEL,CAAC,CAACK,EAAE,uCAE3Df,oBAA8F;MAAjFc,OAAK,uCAAEL,WAAM,oBAAgBA,oBAAe,CAACC,CAAC,CAACK,EAAE;OAAG,sBAAoB;oCAGzFf,oBAA2D;IAA9Cc,OAAK,sCAAEL,WAAM;KAAS,iBAAe,GACvCA,WAAM,0BAAjBF,oBAsBM,oBArBFP,oBAoBM,OApBNgB,UAoBM,GAnBFhB,oBAkBM,OAlBNiB,UAkBM,GAjBFjB,oBAgBM,OAhBNkB,UAgBM,GAfFC,UAA6B,EAC7BnB,oBAYO;IAZAoB,QAAM,yCAAEX,yCAAS;MACpBT,oBAA2C,eAApC,UAAQ,oBAAES,cAAS,CAACG,MAAM,kCACjCZ,oBAA+C;+DAA/BS,cAAS,CAACG,MAAM;IAAES,IAAI,EAAC;iDAAvBZ,cAAS,CAACG,MAAM,KAChCZ,oBAAqD,eAA9C,eAAa,oBAAES,cAAS,CAACI,WAAW,kCAC3Cb,oBAAqD;+DAArCS,cAAS,CAACI,WAAW;IAAEQ,IAAI,EAAC;iDAA5BZ,cAAS,CAACI,WAAW,KACrCS,+RAIY,EACZtB,oBAA8C;IAAvCqB,IAAI,EAAC,QAAQ;IAACE,KAAK,EAAC,QAAQ;IAAET,OAAK,4BAAN,QAAS;MAC7Cd,oBAAmD;IAAtCc,OAAK,sCAAEL,WAAM;KAAQ,UAAQ,2EAQnDA,WAAM,2BAAjBF,oBAqBE,qBApBEP,oBAmBE,OAnBFwB,WAmBE,GAlBExB,oBAiBE,OAjBFyB,WAiBE,GAhBEzB,oBAeM,OAfN0B,WAeM,GAdFC,WAA4B,EAC5B3B,oBAYO;IAZAoB,QAAM,2CAAEX,uCAAQ;MACnBmB,WAAsB,kBACtB5B,oBAAgD;+DAAhCS,cAAS,CAACG,MAAM;IAAES,IAAI,EAAC;iDAAvBZ,cAAS,CAACG,MAAM,KAChCiB,WAA2B,kBAC3B7B,oBAAqD;+DAArCS,cAAS,CAACI,WAAW;IAAEQ,IAAI,EAAC;iDAA5BZ,cAAS,CAACI,WAAW,KACrCS,+RAIY,EACZtB,oBAA8C;IAAvCqB,IAAI,EAAC,QAAQ;IAACE,KAAK,EAAC,QAAQ;IAAET,OAAK,4BAAN,QAAS;MAC7Cd,oBAAmD;IAAtCc,OAAK,wCAAEL,WAAM;KAAQ,UAAQ","names":["_createElementVNode","class","style","_createVNode","_component_update","update","_hoisted_1","_createElementBlock","_Fragment","_ctx","c","_hoisted_2","nombre","descripcion","onClick","id","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","onSubmit","type","_createCommentVNode","value","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16"],"sourceRoot":"","sources":["C:\\Users\\root\\Desktop\\Diplomado Fullstak\\Modulo6\\peliculasvue\\src\\components\\categoria\\SaveCategoriaComponent.vue"],"sourcesContent":["<template>\r\n    <update v-bind:update=\"false\" form-title=\"Registrar\"></update>\r\n    <h1>Listado de categorias en componente</h1>\r\n        <div v-for=\"c in categorias\" k:ey=\"c.id\">\r\n            <div >Nombre: {{c.nombre}} </div>\r\n            <div >Descripcion: {{c.descripcion}} </div>\r\n            <div><button @click=\"removeCategoria(c.id)\">eliminar {{c.id}}</button></div>\r\n            \r\n            <button v-on:click=\"update =true\" @click=\"cargarCategoria(c.id)\">Actualizar Categoria</button>\r\n             \r\n        </div>\r\n        <button v-on:click=\"update =false\">Crear Categoria</button>\r\n        <div v-if=\"update==true\">\r\n            <div class=\"col\">\r\n                <div class=\"card\" style=\"width: 18rem;\">\r\n                    <div class=\"card-body\">\r\n                        <h1>ACTUALIZAR CATEGORIA</h1>\r\n                        <form @submit=\"sendForm2\">\r\n                            <label>Nombre: {{categoria.nombre}}</label>\r\n                            <input v-model=\"categoria.nombre\" type=\"text\" >\r\n                            <label>Descripcion: {{categoria.descripcion}}</label>\r\n                            <input v-model=\"categoria.descripcion\" type=\"text\" />\r\n                            <!--<select  v-model=\"id\">\r\n                                <option v-for=\"c  in categorias\" ::key=\"c.id\" :value=\"c.id\">\r\n                                    {{c.nombre}}\r\n                                </option>\r\n                            </select>-->\r\n                            <input type=\"submit\" value=\"Enviar\" @click=\"\">\r\n                            <button v-on:click=\"update =null\">cancelar</button>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n \r\n        <div v-if=\"update==false\">\r\n            <div class=\"col\">\r\n                <div class=\"card\" style=\"width: 18rem;\">\r\n                    <div class=\"card-body\">\r\n                        <h1>REGISTRAR CATEGORIA</h1>\r\n                        <form @submit=\"sendForm\">\r\n                            <label>Nombre:</label>\r\n                            <input v-model=\"categoria.nombre\" type=\"text\" />\r\n                            <label>Descripcion:</label>\r\n                            <input v-model=\"categoria.descripcion\" type=\"text\" />\r\n                            <!--<select  v-model=\"id\">\r\n                                <option v-for=\"c  in categorias\" ::key=\"c.id\" :value=\"c.id\">\r\n                                    {{c.nombre}}\r\n                                </option>\r\n                            </select>-->\r\n                            <input type=\"submit\" value=\"Enviar\" @click=\"\">\r\n                            <button v-on:click=\"update =null\">cancelar</button> \r\n                        </form>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n \r\n <script>\r\n import axios from \"axios\";\r\n export default {\r\n    props: {\r\n        update: Boolean,\r\n        formTitle: String\r\n    },\r\n     data(){\r\n         return {\r\n            update: Boolean,\r\n            categorias: [],\r\n            categoria: {\r\n                nombre:\"\",\r\n                descripcion:\"\",\r\n            },            \r\n         };\r\n     },\r\n     methods: {\r\n        sendForm(e){\r\n            e.preventDefault();\r\n            \r\n            console.log(this.categoria);\r\n            const formData = new FormData();\r\n            \r\n            formData.append(\"nombre\", this.categoria.nombre);\r\n            formData.append(\"descripcion\", this.categoria.descripcion);\r\n\r\n            //this.insert(formData);\r\n            this.addCategoria();\r\n        },\r\n        insert(formData)\r\n        {\r\n            fetch(\"http://localhost:3000/categoria/\",{\r\n                method: \"POST\",\r\n                body: formData,\r\n            })\r\n                .then((res) =>res.json())\r\n                .then((res)=>console.log(res));\r\n        },\r\n        async addCategoria() {\r\n            const res = await axios.post(`http://localhost:3000/categoria`, {\r\n                nombre: this.categoria.nombre,\r\n                descripcion: this.categoria.descripcion,\r\n            });\r\n            this.categorias = [...this.categorias, res.data];\r\n            this.nombre = \"\";\r\n            this.descripcion = \"\";\r\n        },\r\n        async updateCategoria(id) {\r\n            try {\r\n                await axios.patch(`${`http://localhost:3000/categoria`}/${id}`, {\r\n                    updateCategoria: true\r\n                });\r\n                this.categorias = this.categorias.map(categoria => {\r\n                    if (categoria.id === id) {\r\n                        categoria.updateCategoria = true;\r\n                    }\r\n                    return categoria;\r\n                });\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        },\r\n        removeCategoria(id) {\r\n            axios.delete(`http://localhost:3000/categoria/${id}`)\r\n            this.categorias = this.categorias.filter(categoria => categoria.id !== id)\r\n        },\r\n        async cargarCategoria(id){\r\n            try {\r\n                await axios.get(`${`http://localhost:3000/categoria`}/${id}`, {\r\n                    updateCategoria: true\r\n                });\r\n                this.categorias = this.categorias.map(categoria => {\r\n                    if (categoria.id === id) {\r\n                        categoria.updateCategoria = true;\r\n                    }\r\n                    console.log*()\r\n                    return categoria;\r\n                });\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n            \r\n        }\r\n     },\r\n     computed: {\r\n     },\r\n     mounted() {\r\n        fetch(\"http://localhost:3000/categoria\")\r\n        .then((res) =>res.json())\r\n        .then((res)=>this.categorias=res);\r\n    },\r\n     components: {\r\n     }\r\n }\r\n </script>\r\n <style >\r\n  .producto-relacionado-precio{\r\n        background: orangered;\r\n        color: white;\r\n        text-align: center;\r\n        padding: 10px; \r\n    }\r\n </style>"]},"metadata":{},"sourceType":"module"}